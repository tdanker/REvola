// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// tool1_table
DataFrame tool1_table(DoubleVector demand, DoubleVector renewable_availability_factor, double Renewable_capacity, double Curtailment_threshold, double storage_energy_level_startvalue, double Efficiency_loading, double Efficiency_discharging);
RcppExport SEXP _REvola_tool1_table(SEXP demandSEXP, SEXP renewable_availability_factorSEXP, SEXP Renewable_capacitySEXP, SEXP Curtailment_thresholdSEXP, SEXP storage_energy_level_startvalueSEXP, SEXP Efficiency_loadingSEXP, SEXP Efficiency_dischargingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DoubleVector >::type demand(demandSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type renewable_availability_factor(renewable_availability_factorSEXP);
    Rcpp::traits::input_parameter< double >::type Renewable_capacity(Renewable_capacitySEXP);
    Rcpp::traits::input_parameter< double >::type Curtailment_threshold(Curtailment_thresholdSEXP);
    Rcpp::traits::input_parameter< double >::type storage_energy_level_startvalue(storage_energy_level_startvalueSEXP);
    Rcpp::traits::input_parameter< double >::type Efficiency_loading(Efficiency_loadingSEXP);
    Rcpp::traits::input_parameter< double >::type Efficiency_discharging(Efficiency_dischargingSEXP);
    rcpp_result_gen = Rcpp::wrap(tool1_table(demand, renewable_availability_factor, Renewable_capacity, Curtailment_threshold, storage_energy_level_startvalue, Efficiency_loading, Efficiency_discharging));
    return rcpp_result_gen;
END_RCPP
}
// tool2_table
DataFrame tool2_table(DoubleVector demand, DoubleVector renewable_availability_factor, double Renewable_capacity, double Curtailment_threshold, double storage_energy_level_startvalue, double Efficiency_loading, double Efficiency_discharging, double Storage_energy);
RcppExport SEXP _REvola_tool2_table(SEXP demandSEXP, SEXP renewable_availability_factorSEXP, SEXP Renewable_capacitySEXP, SEXP Curtailment_thresholdSEXP, SEXP storage_energy_level_startvalueSEXP, SEXP Efficiency_loadingSEXP, SEXP Efficiency_dischargingSEXP, SEXP Storage_energySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DoubleVector >::type demand(demandSEXP);
    Rcpp::traits::input_parameter< DoubleVector >::type renewable_availability_factor(renewable_availability_factorSEXP);
    Rcpp::traits::input_parameter< double >::type Renewable_capacity(Renewable_capacitySEXP);
    Rcpp::traits::input_parameter< double >::type Curtailment_threshold(Curtailment_thresholdSEXP);
    Rcpp::traits::input_parameter< double >::type storage_energy_level_startvalue(storage_energy_level_startvalueSEXP);
    Rcpp::traits::input_parameter< double >::type Efficiency_loading(Efficiency_loadingSEXP);
    Rcpp::traits::input_parameter< double >::type Efficiency_discharging(Efficiency_dischargingSEXP);
    Rcpp::traits::input_parameter< double >::type Storage_energy(Storage_energySEXP);
    rcpp_result_gen = Rcpp::wrap(tool2_table(demand, renewable_availability_factor, Renewable_capacity, Curtailment_threshold, storage_energy_level_startvalue, Efficiency_loading, Efficiency_discharging, Storage_energy));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_REvola_tool1_table", (DL_FUNC) &_REvola_tool1_table, 7},
    {"_REvola_tool2_table", (DL_FUNC) &_REvola_tool2_table, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_REvola(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
